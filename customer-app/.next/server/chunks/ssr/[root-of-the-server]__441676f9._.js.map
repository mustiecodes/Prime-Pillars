{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Pee10/Desktop/New%20Folder%20%283%29/Prime%20Pillars/customer-app/lib/axios.ts"],"sourcesContent":["// lib/axios.ts\r\nimport axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:5000/api', // Your Flask backend\r\n  withCredentials: true,\r\n})\r\n\r\nexport default instance\r\n"],"names":[],"mappings":"AAAA,eAAe;;;;AACf;;AAEA,MAAM,WAAW,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC5B,SAAS;IACT,iBAAiB;AACnB;uCAEe","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Pee10/Desktop/New%20Folder%20%283%29/Prime%20Pillars/customer-app/context/AuthProvider.tsx"],"sourcesContent":["'use client'\r\n\r\nimport {\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  ReactNode,\r\n  useCallback,\r\n} from 'react'\r\nimport axios from '@/lib/axios'\r\n\r\ntype User = {\r\n  id: number\r\n  first_name: string\r\n  surname: string\r\n  other_names?: string\r\n  email: string\r\n  pen_number: string\r\n  is_verified: boolean\r\n  role?: string // Optional for now\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null\r\n  loading: boolean\r\n  refreshUser: () => void\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const refreshUser = useCallback(async () => {\r\n    try {\r\n      const res = await axios.get<User>('/auth/me')\r\n      setUser(res.data)\r\n    } catch (err) {\r\n      setUser(null)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    refreshUser()\r\n  }, [refreshUser])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, refreshUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext)\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider')\r\n  }\r\n  return context\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAQA;AAVA;;;;AA6BA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAe,CAAC,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC9B,IAAI;YACF,MAAM,MAAM,MAAM,4GAAA,CAAA,UAAK,CAAC,GAAG,CAAO;YAClC,QAAQ,IAAI,IAAI;QAClB,EAAE,OAAO,KAAK;YACZ,QAAQ;QACV,SAAU;YACR,WAAW;QACb;IACF,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;KAAY;IAEhB,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAS;QAAY;kBACvD;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}}]
}